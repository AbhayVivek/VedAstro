@namespace Website.Pages
@using Genso.Astrology.Library;
@using System.Xml.Linq

<div @onclick="OnClick" class="@(FullWidth?"":"w-50")" style="@InlineStyle">
    <div class="alert alert-@Color d-flex align-items-center" role="alert">
        <span class="iconify bi flex-shrink-0 me-2" data-icon="@IconName" data-width="50"></span>
        <div>
            <strong>@Title</strong><br />
            @Description
            @DescriptionHTML
        </div>
    </div>
</div>


@code {

    /// <summary>
    /// Text that will be displayed in button
    /// Default : primary
    /// </summary>
    [Parameter]
    public string? Color { get; set; } = "primary";

    /// <summary>
    /// Special icon name from icon-sets.iconify.design
    /// </summary>
    [Parameter]
    public string? IconName { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? Description { get; set; }

    public string? InlineStyle
    {
        get
        {
            var final = "";
            final += IsClickMode ? PointerCursorStyle : "";
            final += MaxWidth == null ? "" : MaxWidthStyle;
            return final;
        }
    }

    [Parameter]
    public RenderFragment? DescriptionHTML { get; set; }


    /// <summary>
    /// If URL is provided, on button click will navigate to URL
    /// </summary>
    [Parameter]
    public string? ClickUrl { get; set; }

    /// <summary>
    /// Checks if click URL has been specified
    /// </summary>
    public bool IsClickMode => ClickUrl != "" || ClickUrl != null;


    /// <summary>
    /// If set true, class w-50 will be removed
    /// default false, with w-50
    /// </summary>
    [Parameter]
    public bool FullWidth { get; set; } = false;

    /// <summary>
    /// Note: Needs to be nullable so that can detect if was set
    /// </summary>
    [Parameter]
    public int? MaxWidth { get; set; }

    /// <summary>
    /// used to make class applied in style attribute
    /// </summary>
    private string MaxWidthStyle => $" max-width:{MaxWidth}px;";
    private string PointerCursorStyle => $" cursor: pointer;";

    private void OnClick()
    {
        if (IsClickMode)
        {
            _navigation.NavigateTo(ClickUrl, new NavigationOptions(){ForceLoad = false, });
        }

    }

}

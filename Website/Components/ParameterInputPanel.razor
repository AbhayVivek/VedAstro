@*

█ ▀█▀   █ █▀   ▄▀█   █▀▀ ▄▀█ █ █░░ ▄▄ █▀ ▄▀█ █▀▀ █▀▀   █▀█ █▀▀ ▄▀█ █░░ █ ▀█▀ █▄█
█ ░█░   █ ▄█   █▀█   █▀░ █▀█ █ █▄▄ ░░ ▄█ █▀█ █▀░ ██▄   █▀▄ ██▄ █▀█ █▄▄ █ ░█░ ░█░

█▀▄ █▀█   █▄░█ █▀█ ▀█▀   █▀▀ █▀▀ ▄▀█ █▀█ ░   █░░ █ █░█ █▀▀   █▀▀ █▀█ █▀█   █ ▀█▀   █ █▀   █▀▄ █▀▀ ▄▀█ █▀█
█▄▀ █▄█   █░▀█ █▄█ ░█░   █▀░ ██▄ █▀█ █▀▄ █   █▄▄ █ ▀▄▀ ██▄   █▀░ █▄█ █▀▄   █ ░█░   █ ▄█   █▄▀ ██▄ █▀█ █▀▄
 *@

@namespace Website.Pages
@using VedAstro.Library;
@using System.Xml.Linq
@using System.Reflection

<div class="vstack gap-3">

	<TypeSpecificInput @ref="param1" />
	<TypeSpecificInput @ref="param2" />
	<TypeSpecificInput @ref="param3" />
	<TypeSpecificInput @ref="param4" />

</div>



@code {
	TypeSpecificInput param1;
	TypeSpecificInput param2;
	TypeSpecificInput param3;
	TypeSpecificInput param4;
	List<TypeSpecificInput> paramList ;


	protected async override Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			paramList = new() { param1, param2, param3, param4 };
		}
		
	}

	public void Show(List<Type> paramTypeList)
	{
		//get value if any, else pass in Null, which will render nothing
		param1.SetValue(paramTypeList.GetValueOrNull(0));
		param2.SetValue(paramTypeList.GetValueOrNull(1));
		param3.SetValue(paramTypeList.GetValueOrNull(2));
		param4.SetValue(paramTypeList.GetValueOrNull(3));

		paramList = new() { param1, param2, param3, param4 };

		StateHasChanged(); //needed to propagate updates
	}

	public async Task<string> ToApiUrl()
	{
		var compiledUrl = "";

		//combine all the URLs of the inputs
		foreach (var paramInput in paramList)
		{
			if (paramInput != null)
			{
				compiledUrl += await paramInput.ToApiUrl() ?? "";
			}
		}

		return compiledUrl;

	}

}

@*SIMPLE BOX TO RENDER IMAGE TOOLTIP OF PERSON BY NAME*@

@namespace Website.Pages
@using VedAstro.Library;
@using System.Xml.Linq

<div id="PersonTooltip" @ref="mainElement" class="hstack">
    <img style="width:@GR.W97px;" src="images/@ImageName.@ImageFormat" class="img-thumbnail mt-1" alt="..." />
    @*buttons related to account*@
    <IconButton TooltipText="Horoscope" IconName="bi:list-stars" ClickUrl="@PageRoute.AddPerson" />
    <IconButton TooltipText="Add Notes" IconName="system-uicons:clipboard-notes" ClickUrl="@PageRoute.AddPerson" />
</div>

<div style="cursor: pointer" @ref="elementReference">
    @*only show if has value*@
    @(!string.IsNullOrEmpty(Text) ? Text : "")
    @(HTML != null ? HTML : "")
</div>


@code {


    /// <summary>
    /// image name is expected to exist in images folder with .JPG format
    /// </summary>
    [Parameter]
    public string ImageName { get; set; }


    private ElementReference mainElement { get; set; }
    /// <summary>
    /// defaults to "jpg"
    /// </summary>
    [Parameter]
    public string ImageFormat { get; set; } = "jpg";

    /// <summary>
    /// set either Text or HTML for content
    /// </summary>
    [Parameter]
    public string Text { get; set; }

    /// <summary>
    /// any content to wrap
    /// </summary>
    [Parameter]
    public RenderFragment HTML { get; set; }

    private ElementReference elementReference { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender) => await InvokeAsync(async () => await _OnAfterRender(firstRender)).Try(_jsRuntime);

    private async Task _OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            //attach tooltip lib element if tooltip provided
            if (!string.IsNullOrEmpty(ImageName))
            {
                //construct html to show image
                var tooltipSettings =
                    new
                    {
                        content = mainElement,
                        allowHTML = true,
                        arrow = true,
                        animation = "scale-extreme",
                        interactive = true //so that can click button
                    };

                await _jsRuntime.Tippy(elementReference, tooltipSettings);
            }
        }
    }


}

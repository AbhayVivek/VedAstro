@namespace Website.Pages
@using VedAstro.Library;



@if (_apiCallData != null)
{

    @if (_apiCallData == typeof(Time))
    {
        <TimeLocationInput @ref="_timeLocationInput" />
    }
    else if (_apiCallData == typeof(PlanetName))
    {
        <div class="input-group mb-3">
            <label class="input-group-text" for="inputGroupSelect01">Planet</label>
            <select @bind="_selectedPlanetName" class="form-select" id="inputGroupSelect01">
                <option selected>Choose...</option>
                @{
                    foreach (var value in PlanetName.All9Planets)
                    {
                        <option value="@value">@value</option>
                    }
                }
            </select>
        </div>
    }
    else if (_apiCallData == typeof(Angle))
    {
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Degrees</span>
            <input @bind="totalDegrees" type="text" class="form-control" placeholder="23.456" aria-label="Degrees" aria-describedby="basic-addon1">
        </div>
    }
    else if (_apiCallData.IsEnum)
    {
        <div class="input-group mb-3">
            <label class="input-group-text" for="inputGroupSelect01">@_apiCallData.Name</label>
            <select class="form-select" id="inputGroupSelect01">
                <option selected>Choose...</option>
                @{
                    foreach (var value in Enum.GetValues(_apiCallData))
                    {
                        <option value="@value">@value</option>
                    }
                }
            </select>
        </div>
    }
    else
    {
        <p>Rendering For Type : @_apiCallData.FullName Not Specified!</p>
    }


}

@code {
    private Type _apiCallData;
    private double totalDegrees;
    private string _selectedPlanetName;
    private TimeLocationInput _timeLocationInput;

    public void SetValue(Type apiCallData)
    {
        this._apiCallData = apiCallData;

        StateHasChanged(); //needed to propagate updates
    }

    public async Task<string> ToApiUrl()
    {
	    var combinedUrl = "";
        combinedUrl += _timeLocationInput == null ? "" : await _timeLocationInput.ToApiUrl();
        combinedUrl += _selectedPlanetName == null ? "" : $"/PlanetName/{_selectedPlanetName}";

	    return combinedUrl;
    }

}

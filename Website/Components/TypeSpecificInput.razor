@namespace Website.Pages
@using VedAstro.Library;



@if (_apiCallData != null)
{

	@if (_apiCallData == typeof(Time))
	{
		<TimeLocationInput @ref="_inputTimeLocation" />
	}
	else if (_apiCallData == typeof(PlanetName))
	{
		<div class="input-group">
			<label class="input-group-text" for="@InstanceId">Planet</label>
			<select @bind="_inputPlanetName" class="form-select" id="@InstanceId">
				<option selected>Choose...</option>
				@{
					foreach (var value in PlanetName.All9Planets)
					{
						<option value="@value">@value</option>
					}
				}
			</select>
		</div>
	}
	else if (_apiCallData == typeof(Angle))
	{
		<div class="input-group">
			<span class="input-group-text" id="basic-addon1">Degrees</span>
			<input @bind="_inputTotalDegrees" type="text" class="form-control" placeholder="23.456" aria-label="Degrees" aria-describedby="basic-addon1">
		</div>
	}
	else if (_apiCallData.IsEnum)
	{
		<div class="input-group">
			<label class="input-group-text" for="@InstanceId">@(Format.FormatName(_apiCallData.Name))</label>
			<select @bind="_inputEnumName" class="form-select" id="@InstanceId">
				<option selected>Choose...</option>
				@{
					foreach (var value in Enum.GetValues(_apiCallData))
					{
						<option value="@value">@value</option>
					}
				}
			</select>
		</div>
	}
	else
	{
		<p>UNDER CONSTRUCTION : <a href="@PageRoute.Donate">Donate to help development</a></p>
		<p style="font-size=8px;">@_apiCallData.FullName</p>
	}


}

@code {
	/// <summary>
	/// id used to sync labels and inputs, for HTML sake
	/// </summary>
	private static string InstanceId = Guid.NewGuid().ToString();
	private Type _apiCallData;
	private double _inputTotalDegrees;
	private string _inputPlanetName;
	private string _inputEnumName;
	private TimeLocationInput _inputTimeLocation;

	public void SetValue(Type apiCallData)
	{
		this._apiCallData = apiCallData;

		StateHasChanged(); //needed to propagate updates
	}

	public async Task<string> ToApiUrl()
	{
		var combinedUrl = "";

		if (_apiCallData == typeof(Time)) { combinedUrl = await _inputTimeLocation.ToApiUrl(); }
		else if (_apiCallData == typeof(PlanetName)) { combinedUrl = $"/PlanetName/{_inputPlanetName}"; }
		else if (_apiCallData == typeof(Angle)) { combinedUrl = $"/Angle/{_inputTotalDegrees}"; }
		else if (_apiCallData?.IsEnum ?? false) { combinedUrl = $"/{_apiCallData.Name}/{_inputEnumName}"; }


		return combinedUrl;
	}

}

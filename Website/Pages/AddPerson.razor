@page "/addperson/"
@using Genso.Astrology.Library


<PageTitle>Add new person</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-sm">
            <form>
                <div class="form-group">
                    <label>Name</label>
                    <input @bind="_name" type="text" class="form-control" placeholder="Enter name">
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-5">
                            <label>Birth Time (24h)</label>
                            <input @bind="_timeInput" type="text" class="form-control" placeholder="06:42">
                        </div>
                        <div class="col-5">
                            <label>Date</label>
                            <input @bind="_dateInput" type="text" class="form-control" placeholder="16/04/2021">
                        </div>
                        <div class="col">
                            <label>Timezone</label>
                            <input @bind="_timezoneInput" type="text" class="form-control" placeholder="+08:00">
                        </div>
                    </div>
                </div>

                <GeoLocationInput @bind-LocationName="_locationName" @bind-Longitude="_longitude" @bind-Latitude="_latitude" />
                <div class="form-group">
                    <label>Gender</label>
                    <select @bind="_genderString" class="form-control">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
            </form>
        </div>
    </div>
    <div style="margin-top: 50px" class="row">
        <button type="submit" @onclick="SubmitNewPerson" class="btn btn-primary">Submit</button>
    </div>
</div>



@code {


    string? _name;
    string? _timeInput, _dateInput, _timezoneInput;
    string _locationName = "";
    double _longitude;
    double _latitude;
    Gender _gender;
    string _genderString = "";
    Person _newPerson;

    public bool PageReady { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //show loading box
        await _globalVariable.LoadingMessage.Show();

        //auto fill time zone based on system time
        _timezoneInput = DateTimeOffset.Now.ToString("zzz");

    }

    //hide the loading message that was open in init
    protected override async Task OnAfterRenderAsync(bool firstRender) => await _globalVariable.LoadingMessage.Hide();


    //sends the newly created person to API server
    private async void SubmitNewPerson()
    {
        await _globalVariable.LoadingMessage.Show();

        //parse data received from user
        var geoLocation = new GeoLocation(_locationName, _longitude, _latitude);
        var fullTimeString = $"{_timeInput} {_dateInput} {_timezoneInput}";
        var stdTimeMale = DateTimeOffset.ParseExact(fullTimeString, Time.GetDateTimeFormat(), null);

        //get gender from gender string
        _gender = Enum.Parse<Gender>(_genderString);

        //create a new person from the inputed data
        var birthTime = new Time(stdTimeMale, geoLocation);
        _newPerson = new Person(_name, birthTime, _gender);

        //send newly created person to API server
        var xmlData = _newPerson.ToXml();
        var result = ServerManager.WriteToServer(ServerManager.AddPersonAPI, xmlData);

        //let user know person has been added
        //TODO NOT IMPLEMENTED
        _globalVariable.Alert.ShowSuccess($"{_name} added successfully!");

        //refresh the page variables
        //todo marked for deletion, test without = no difference > delete
        this.StateHasChanged();

        await _globalVariable.LoadingMessage.Hide();
    }


}
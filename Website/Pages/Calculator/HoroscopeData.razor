@using VedAstro.Library
@attribute [Route(PageRoute.HoroscopeData)]


<PageTitle>Horoscope Data</PageTitle>

<PageTop Title="Horoscope Data" IconName="carbon:graphical-data-flow">
    <Description>Raw astrological info of a person's horoscope. This is useful to make advanced predictions.</Description>
    <ButtonsRow>
        <IconButton IconName="ant-design:user-add-outlined" ButtonText="Add Person" ClickUrl="@PageRoute.AddPerson"></IconButton>
        <IconButton IconName="fluent:book-star-20-filled" ButtonText="Horoscope" ClickUrl="@PageRoute.Horoscope"></IconButton>
    </ButtonsRow>
</PageTop>

<div class="vstack gap-3">
    <PersonSelectorBox @ref="_peopleSelectorBox" />
    <IconButton IconName="uim:process" ButtonText="Calculate" OnClickCallback="OnClickCalculate"></IconButton>
</div>

<hr>

@if (_isResultReady)
{
    <StrengthChart Time="@SelectedPerson.BirthTime" />
    <hr>
    <PlanetHouseInfoViewer Time="@SelectedPerson.BirthTime"/>
}



@code {

    private bool _isResultReady = false; //marks if the page ready to loaded
    private PersonSelectorBox _peopleSelectorBox;
    private Person SelectedPerson;


    //█░░ █ █▀▀ █▀▀ █▀▀ █▄█ █▀▀ █░░ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▄▄ █ █▀░ ██▄ █▄▄ ░█░ █▄▄ █▄▄ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█
    //METHODS THAT CAN IMPLEMENT ASYNC ERROR HANDLER


    private async Task OnClickCalculate() => await InvokeAsync(async () => await _OnClickCalculate()).Try(_jsRuntime);





    //█▀█ █▀█ █ █░█ ▄▀█ ▀█▀ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▀▀ █▀▄ █ ▀▄▀ █▀█ ░█░ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█


    private async Task _OnClickCalculate()
    {
        //only continue if passed input field validation
        if (!await ValidationPassed()) { return; }

       await _jsRuntime.ShowLoading();

        //hide on second calculate
        _isResultReady = false;

        //get data from inputs and save it for use by other components
        SelectedPerson = await _peopleSelectorBox.GetSelectedPerson();

        //mark page as ready to show results
        _isResultReady = true;

        _jsRuntime.HideAlert();
    }

    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private async Task<bool> ValidationPassed()
    {

        //TEST 1
        //if person not selected, invalid
        if (!_peopleSelectorBox.IsPersonSelected)
        {
            //mark invalid & alert user
            await _jsRuntime.ShowAlert("error", AlertText.SelectName, true);
            return false;
        }

        return true;
    }

}

@attribute [Route(PageRoute.Match)]
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.FileSystemGlobbing.Internal
@using VedAstro.Library
@using System.Xml.Linq


<PageTitle>Find Marriage Match</PageTitle>

<PageTop ImageName="match-checker.svg"
         Title="Match"
         DescriptionText="Check compatibility between 2 people. 16 astrological factors used to make this accurate prediction.">
</PageTop>


<div class="d-flex flex-wrap mb-5">
    @*SELECTOR*@
    <div>
        <div class="vstack gap-3 me-5">
            <PersonSelectorBox @ref="_malePeopleSelector" @bind-SelectedPersonId="@SelectedMale" Label="Male" />
            <PersonSelectorBox @ref="_femalePeopleSelector" @bind-SelectedPersonId="@SelectedFemale" Label="Female" />
            <IconButton IconName="uim:process" ButtonText="Calculate" OnClickCallback="OnClickCalculate" />
        </div>
    </div>
    @*SIDEBAR*@
    @* <div>
    <ul class="list-group rounded-3">
    <li class="list-group-item active" aria-current="true">Full Check</li>
    <li class="list-group-item"><IconText FontSize="24" IconName="flat-color-icons:checkmark">Mars-Venus Dosa</IconText></li>
    <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark"/>12 Porutham/Kuta</li>
    <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark"/>Kuta Exceptions</li>
    <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark"/>7th House General</li>
    </ul>
    </div>*@
</div>


<IconTitle Title="Accurate Predictions" IconName="flat-color-icons:filing-cabinet" />
<MatchReportListViewer @ref="savedMatchReportList" />

<div class="mt-3" style="max-width: @GR.W667px">

    <ArticleBlock Title="Imagine Perfect Marriages" IconName="emojione:amphora">
        <TextHTML>
            <p>
                Do we need more proof? Is it not high time, for us as a human species to stop hunting for partners blindly like
                animals based on our senses and circumstance. But rather use divine intelligence guided by cosmic laws that guarantee
                a perfect union.
            </p>
            <p>
                The age of "imperfection", the age of "Kali" is over. We have before us the new age of thinking men, the age of "Dwarpara". Gone are the ways of old.
                Just imagine a world with <strong>no divorces</strong>, a world where <strong>happy marriages</strong> is common sight. Where laughter abounds &amp; fear stands still.
            </p>

            <div style="cursor: pointer;" @onclick="() => _jsRuntime.OpenNewTab(URL.JohnLenonImagine)">
                <figure class="text-center mt-4">
                    <blockquote class="blockquote">
                        <p>You may say I'm dreamer, <br /> but I'm not the only one.</p>
                    </blockquote>
                    <figcaption class="blockquote-footer">
                        John Lenon @*<cite title="Source Title">Singer Beatles 60'</cite>*@
                    </figcaption>
                </figure>
            </div>

        </TextHTML>
    </ArticleBlock>

</div>


@code {

    //VARIABLES
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }
    private PersonSelectorBox _malePeopleSelector;
    private PersonSelectorBox _femalePeopleSelector;
    private PersonSelectorBox _SavedMatchReport;
    private MatchReportListViewer savedMatchReportList;



    //--------------------EVENT HANDLERS

    //private string GetMatchColor(double score)
    //{
    //    //100 = #00ff00
    //    //70 = #7dff7d
    //    //50 = #ffffff
    //    //25 = #ff6969
    //    //25 = #ff0000
    //}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var exampleReport = await WebsiteTools.GetSavedMatchList("101","101");
            savedMatchReportList.Show(exampleReport);
        }
    }

    private async Task<List<MatchReport>> GetExampleReports()
    {
        var returnVal = new List<MatchReport>()
        {
            //Kristen Bell  Dax Shepard
            await WebsiteTools.GetCompatibilityReport("70d6a995dec84c0aa74211ac9ff50d29", "8e9b5804e68a4b82a1a975ebee1643dc"),
            //Matt Damon  Luciana Barroso
            await WebsiteTools.GetCompatibilityReport("696c62d1f429469aaf8111fc1418f7ce", "ef97500191d248cd92bc43d32fed6093"),
            //Napoleon Bonaparte  Joséphine de Beau.
            await WebsiteTools.GetCompatibilityReport("54041d1ffb49479997f7987ecfchf08b5", "7faa6fe13ac5442d9d3dba972daa9af2"),
            //Brad Pitt  Angelina Jolie
            await WebsiteTools.GetCompatibilityReport("70d6a995dec84c0aa74211ac9ff50d29", "8e9b5804e68a4b82a1a975ebee1643dc"),
            //John Lennon  Yoko Ono
            await WebsiteTools.GetCompatibilityReport("70d6a995dec84c0aa74211ac9ff50d29", "8e9b5804e68a4b82a1a975ebee1643dc"),
        };

        return returnVal;
    }

  

    private async Task OnClickCalculate()
    {
        await _jsRuntime.ShowLoading();

        //only continue if passed input field validation
        if (!ValidationPassed()) { return; }

        //navigate page to match report
        _navigation.NavigateTo($"{PageRoute.MatchReport}/{SelectedMale}/{SelectedFemale}");
    }

    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private bool ValidationPassed()
    {

        //TEST 1
        //if person not selected, invalid
        if (!_malePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select male person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;

        }

        //TEST 2
        //if person not selected, invalid
        if (!_femalePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select female person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;
        }


        //if control reaches here than, it's valid
        return true;


    }


}
@attribute [Route(PageRoute.Match)]
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.FileSystemGlobbing.Internal
@using VedAstro.Library


<PageTitle>Find Marriage Match</PageTitle>

<PageTop Title="Match" IconName="bi:arrow-through-heart-fill">
    <Description>Check compatibility between 2 people. 16 astrological factors used to make this accurate prediction.</Description>
</PageTop>



<div class="d-flex flex-wrap mb-5">
    <div>
        <div class="vstack gap-3 me-5">
            <PersonSelectorBox @ref="_malePeopleSelector" @bind-SelectedPersonId="@SelectedMale" Label="Male" />
            <PersonSelectorBox @ref="_femalePeopleSelector" @bind-SelectedPersonId="@SelectedFemale" Label="Female" />
            <IconButton IconName="uim:process" ButtonText="Calculate" OnClickCallback="OnClickCalculate"></IconButton>
        </div>
    </div>
    <div>
        <ul class="list-group rounded-3">
            <li class="list-group-item active" aria-current="true">Full Check</li>
            <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark" />Mars-Venus Dosa</li>
            <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark" />12 Porutham/Kuta</li>
            <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark" />Kuta Exceptions</li>
            <li class="list-group-item"><Icon IconName="flat-color-icons:checkmark" />7th House General</li>
        </ul>
    </div>
</div>

<hr />

<IconTitle Title="Accurate Predictions" IconName="flat-color-icons:filing-cabinet" />
<SavedMatchReportList @ref="savedMatchReportList" />

<hr style="margin-bottom:@GR.W157px;">

@*<h4>Philosophy</h4>
<p>
    Do we need more proof? It is high time, for us as a human species to stop hunting for partners blindly like animals based on our senses.
    Instead we shall use divine intelligence with understanding of cosmic laws that guarantee a perfect union between 2 souls.
    Just imagine a world with no divorces, a world where happy marriages is common sight. Where laughter abounds &amp; fear stands still.
    "You may say I'm dreamer, but I'm not the only one." -- John Lenon
</p>
*@
@code {

    //VARIABLES
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }
    private PersonSelectorBox _malePeopleSelector;
    private PersonSelectorBox _femalePeopleSelector;
    private PersonSelectorBox _SavedMatchReport;
    private SavedMatchReportList savedMatchReportList;



    //--------------------EVENT HANDLERS

    //private string GetMatchColor(double score)
    //{
    //    //100 = #00ff00
    //    //70 = #7dff7d
    //    //50 = #ffffff
    //    //25 = #ff6969
    //    //25 = #ff0000
    //}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var exampleReport = await GetExampleReports();
            savedMatchReportList.Show(exampleReport);
            //show loading box
            //await _jsRuntime.ShowLoading();

            //get male list from api server & save it for later
            //_malePeopleSelector.SetData(await WebsiteTools.GetMalePeopleList(AppData.CurrentUser?.Id));
            //_femalePeopleSelector.SetData(await WebsiteTools.GetFemalePeopleList(AppData.CurrentUser?.Id));

            //hide loading box
            //_jsRuntime.HideAlert();

            ////called last because will loop back
            //this.StateHasChanged();

        }
    }



    private async Task<List<CompatibilityReport>> GetExampleReports()
    {
        var returnVal = new List<CompatibilityReport>()
        {
            await WebsiteTools.GetCompatibilityReport("70d6a995dec84c0aa74211ac9ff50d29", "8e9b5804e68a4b82a1a975ebee1643dc"),
            await WebsiteTools.GetCompatibilityReport("70d6a995dec84c0aa74211ac9ff50d29", "8e9b5804e68a4b82a1a975ebee1643dc")
        };

        return returnVal;
    }

    private async Task OnClickCalculate()
    {
        await _jsRuntime.ShowLoading();

        //only continue if passed input field validation
        if (!ValidationPassed()) { return; }

        //navigate page to match report
        _navigation.NavigateTo($"{PageRoute.MatchReport}/{SelectedMale}/{SelectedFemale}");
    }

    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private bool ValidationPassed()
    {

        //TEST 1
        //if person not selected, invalid
        if (!_malePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select male person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;

        }

        //TEST 2
        //if person not selected, invalid
        if (!_femalePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select female person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;
        }


        //if control reaches here than, it's valid
        return true;


    }


}
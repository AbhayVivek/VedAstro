@page "/dasa"
@using Genso.Astrology.Library
@inherits IPage

<div class="vstack gap-2">
    @*PERSON SELECTOR*@
    <div>
        @if (PageReady)
        {
            <PeopleSelectorBox @bind-SelectedPersonName="SelectedPersonName" PersonList="@PersonList"/>
        }
    </div>
    @*CALCULATE BTN*@
    <div>
        <button type="submit" @onclick="OnClickCalculate" class="btn btn-primary">Calculate</button>
    </div>
    <hr>
    @*DASA VIEW BOX*@
    <div>
        
        @*        @if (_isResultReady)
        {
            <DasaViewBox @ref="_dasaViewBox" Person="@SelectedPerson" Location="@SelectedLocation" />
        }
        *@    
        <DasaReportViewer @ref="_dasaReportViewer"/>
        </div>
    <hr>
    @*PLANET INFO LIST*@
    <div>
        @if (_isResultReady)
        {
            <h4 class="mt-2">Planets</h4>
            <div class="d-flex flex-nowrap">
                <PlanetInfoBox PlanetName="PlanetName.Sun" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Moon" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Mercury" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Mars" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Jupiter" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Saturn" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Venus" time="@SelectedPerson.GetBirthDateTime()" />
            </div>
        }
    </div>
</div>



@code {


    private DasaViewBox? _dasaViewBox;
    private DasaReportViewer? _dasaReportViewer;
    public List<Person>? PersonList { get; set; } //data from URL not necessary provided
    public string? SelectedPersonName { get; set; }
    public Person SelectedPerson { get; set; }
    public GeoLocation SelectedLocation { get; set; }
    private bool _isResultReady = false; //marks if the page ready to loaded



    /// <summary>
    /// This method is called from page base class constructor
    /// </summary>
    public override async Task AttachEventHandlers()
    {
        Console.WriteLine("Muhurtha:AttachEventHandlers");

        //first call back base's event handlers
        await base.AttachEventHandlers();

        //event handlers for showing loading box
        OnPageBusy += async () => await _globalVariable.LoadingMessage.Show();
        OnPageReady += async () => await _globalVariable.LoadingMessage.Hide();
    }



    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Muhurtha:OnInitializedAsync");

        //mark page as not ready
        PageReady = false;

        //get person list from api server & save it for later
        var personListRootXml = await ServerManager.ReadFromServer(ServerManager.GetPersonListAPI);
        PersonList = personListRootXml.Elements().Select(maleXml => Person.FromXml(maleXml)).ToList();

        //mark page as ready
        PageReady = true;


    }

    private async Task OnClickCalculate()
    {
        //mark page as not ready
        PageReady = false;

        //get data from inputs and save it for use by other components
        SelectedPerson = PersonList.Find(p => p.GetName() == SelectedPersonName); //TODO: find person by hash not name only
        SelectedLocation = new GeoLocation("Ipoh", 101, 4.59);//todo get real location

        //set data into dasa viewer
        await _dasaReportViewer.SetData(SelectedPerson, SelectedLocation);

        //mark page as ready to show results
        _isResultReady = true;

        //update view box data directly when clicked 2nd time
        //without this update does not propagate
        //todo can be done better with events & JS
        if (_dasaViewBox != null)
        {
            _dasaViewBox.Person = SelectedPerson;
            _dasaViewBox.Location = SelectedLocation;

            await _dasaViewBox.RefreshData();
        }

        PageReady = true;
    }

}
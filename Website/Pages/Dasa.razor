@page "/dasa"
@using Genso.Astrology.Library


<div class="vstack gap-2">
    @*PERSON SELECTOR*@
    <div>
        <PeopleSelectorBox @ref="_peopleSelectorBox" @bind-SelectedPersonName="SelectedPersonName" />
    </div>
    @*CALCULATE BTN*@
    <div>
        <button type="submit" @onclick="OnClickCalculate" class="btn btn-primary">Calculate</button>
    </div>
    <hr>
    @*DASA VIEW BOX*@
    <div>
        <DasaReportViewer @ref="_dasaReportViewer" />
    </div>
    <hr>
    @*PLANET INFO LIST*@
    <div>
        @if (_isResultReady)
        {
            <h4 class="mt-2">Planets</h4>
            <div class="d-flex flex-nowrap">
                <PlanetInfoBox PlanetName="PlanetName.Sun" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Moon" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Mercury" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Mars" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Jupiter" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Saturn" time="@SelectedPerson.GetBirthDateTime()" />
                <PlanetInfoBox PlanetName="PlanetName.Venus" time="@SelectedPerson.GetBirthDateTime()" />
            </div>
        }
    </div>
</div>



@code {

    //--------------------FIELDS

    private PeopleSelectorBox? _peopleSelectorBox;
    private DasaReportViewer? _dasaReportViewer;

    public List<Person>? PersonList { get; set; } //data from URL not necessary provided
    public string? SelectedPersonName { get; set; }
    public Person SelectedPerson { get; set; }
    public GeoLocation SelectedLocation { get; set; }
    private bool _isResultReady = false; //marks if the page ready to loaded



    //--------------------OVERRIDES

    protected override async Task OnInitializedAsync()
    {

        //show loading box
        await _globalVariable.LoadingMessage.Show();

        //set people list into people selector
        //note : without above first call _peopleSelectorBox is null
        PersonList = await _globalVariable.GetPeopleList();
        _peopleSelectorBox.SetData(PersonList);

        //hide loading box
        await _globalVariable.LoadingMessage.Hide();

    }





    //--------------------METHODS

    private async Task OnClickCalculate()
    {
        await _globalVariable.LoadingMessage.Show();

        //get data from inputs and save it for use by other components
        SelectedPerson = PersonList.Find(p => p.GetName() == SelectedPersonName); //TODO: find person by hash not name only
        SelectedLocation = new GeoLocation("Ipoh", 101, 4.59);//todo get real location

        //set data into dasa viewer
        await _dasaReportViewer.SetData(SelectedPerson, SelectedLocation);

        //mark page as ready to show results
        _isResultReady = true;

        await _globalVariable.LoadingMessage.Hide();
    }

}
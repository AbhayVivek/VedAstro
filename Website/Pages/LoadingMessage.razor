@*Component to show loading message to user*@

@*by default invisible*@

<style>

    #progressBar {
        margin: 20px;
        width: 164px;
        height: 8px;
        position: relative;
    }

    .progressbar-text {
        position: unset !important;
    }
</style>


<div @ref="_loadingMessage" style="display: none;">
    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block">
        <div class="modal-dialog modal-dialog-centered" style="width: fit-content;" role="document">
            <div class="modal-content">
                <div class="modal-body align-content-center" style="text-align: center;">
                    <img src="images/loading-animation.gif" />
                    <div id="progressBar" style="margin-bottom: 48px;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-backdrop fade show"></div>
</div>




@code {

    private bool _isOpen = false;


    //REFERENCE TO HTML ELEMENTS
    private ElementReference _loadingMessage;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsRuntime.InvokeVoidAsync("InitProgressBar");
        }
    }

    /// <summary>
    /// Show loading message
    /// </summary>
    public async Task Show()
    {
        //if already open end here
        if (_isOpen) { return; }

        //if not ready wait
        await _globalVariable.WaitTillComponentReady();

        //show the modal
        await _jsRuntime.Show(_loadingMessage);

        //wait a little, if no progress set
        //within 1 second, then use auto set
        //purposely called without await so
        //that it doesn't hold control
        RunAfterDelay();

        _isOpen = true;

        
    //---------------- FUNCTIONS-------------
       
        async Task RunAfterDelay()
        {
            //wait a little for progress to be set by caller
            await Task.Delay(1000);

            //check if caller forgot to set progress
            var callerForgotToSet = await _jsRuntime.GetProgressBarValue() <= 0;

            if (callerForgotToSet)
            {
                Console.WriteLine("BLZ: LoadingMessage.Show: Auto Progress Bar");
                await _jsRuntime.AddToProgressBar(80);
            }
            else
            {
                Console.WriteLine("BLZ: LoadingMessage.Show: Manual Progress Bar");
            }
        }
    }

    /// <summary>
    /// Hide loading message
    /// </summary>
    public async Task Hide()
    {
        //if already close end here
        if (!_isOpen) { return; }

        await _jsRuntime.ResetProgressBar();


        //if not ready wait
        await _globalVariable.WaitTillComponentReady();

        //hide loading box
        await _jsRuntime.Hide(_loadingMessage);

        _isOpen = false;
    }

}
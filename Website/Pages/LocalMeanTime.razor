@attribute [Route(PageRoute.LocalMeanTime)]
@using Genso.Astrology.Library

<PageTitle>Local Mean Time (LMT)</PageTitle>

<h3>Local Mean Time (LMT)</h3>
<p>
    LMT is the real time at a place based on it's longitude.
    <br />
    At 12PM LMT the Sun will be directly overhead.
</p>

<h5>LMT: @_lmtString</h5>
<h5>STD: @_stdString</h5>

<GeoLocationInput @ref="_geoLocationInput" />

<div style="margin-top: 50px" class="row">
    <IconButton ButtonText="Update" IconName="ep:refresh" OnClickCallback="UpdateLocalMeanTime"></IconButton>
</div>


@code {

    string? _lmtString = "";
    string? _stdString = "";
    private GeoLocationInput _geoLocationInput;


    //auto update "time" after location is updated
    //called every time after the component has finished rendering
    protected override void OnAfterRender(bool firstRender) => UpdateLocalMeanTime();



    protected override async Task OnInitializedAsync()
    {
        //update time every 5s
        var timer = new PeriodicTimer(TimeSpan.FromSeconds(5));
        while (await timer.WaitForNextTickAsync()) { UpdateLocalMeanTime(); }
    }

    private void UpdateLocalMeanTime()
    {
        //parse location received from user
        var geoLocation = _geoLocationInput.GetGeoLocation();

        //get time now
        var timeNow = Time.Now(geoLocation);

        //show lmt time as string
        _lmtString = timeNow.GetLmtDateTimeOffset().ToString(Time.DateTimeFormat);
        _stdString = timeNow.GetStdDateTimeOffsetText();
    }

}
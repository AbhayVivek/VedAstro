@page "/match"
@using Microsoft.AspNetCore.Components
@using Genso.Astrology.Library
@inject NavigationManager _navigation


<PageTitle>Find Marriage Match</PageTitle>

@if (_pageReady)
{
    <PeopleSelectorBox @bind-SelectedPersonName="@SelectedMale" Label="Male" PersonList="@MaleList" />
    <PeopleSelectorBox @bind-SelectedPersonName="@SelectedFemale" Label="Female" PersonList="@FemaleList" />

    <div style="margin-top: 50px" class="row">
        <button type="submit" @onclick="GetMatchReport" class="btn btn-primary">Submit</button>
    </div>

}

@code {

    //VARIABLES
    public List<Person> MaleList { get; set; } //data from URL not necessary provided
    public List<Person> FemaleList { get; set; } //data from URL not necessary provided
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }

    private bool _pageReady = false; //marks if the page ready to loaded


    protected override async Task OnInitializedAsync()
    {
        //show loading box
        await _globalVariable.LoadingMessage.Show();

        //get male list from api server & save it for later
        var rawMaleListXml = await ServerManager.ReadFromServer(ServerManager.GetMaleListAPI);
        MaleList = rawMaleListXml.Elements().Select(maleXml => Person.FromXml(maleXml)).ToList();

        //get female list from api server & save it for later
        var rawFemaleListXml = await ServerManager.ReadFromServer(ServerManager.GetFemaleListAPI);
        FemaleList = rawFemaleListXml.Elements().Select(femaleXml => Person.FromXml(femaleXml)).ToList();

        _pageReady = true;

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //close loading box that was opened during init
        if (_pageReady) { await _globalVariable.LoadingMessage.Hide(); }
    }

    private void GetMatchReport() => _navigation.NavigateTo($"matchreport/{SelectedMale}/{SelectedFemale}");
}
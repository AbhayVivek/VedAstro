@attribute [Route(PageRoute.Match)]
@using Microsoft.AspNetCore.Components


<PageTitle>Find Marriage Match</PageTitle>

<PageTop Title="Match" IconName="bi:arrow-through-heart-fill">
    <Description>Check marriage compatibility between horoscopes. 16 Astrological factors are used to make this accurate prediction</Description>
    <ButtonsRow>
        <IconButton IconName="ant-design:user-add-outlined" ButtonText="Add Person" ClickUrl="@PageRoute.AddPerson"></IconButton>
        <IconButton IconName="fluent:people-list-24-filled" ButtonText="Person List" ClickUrl="@PageRoute.PersonList"></IconButton>
    </ButtonsRow>
</PageTop>




<div class="vstack gap-3">
    <PeopleSelectorBox @ref="_malePeopleSelector" @bind-SelectedPersonId="@SelectedMale" Label="Male" />
    <PeopleSelectorBox @ref="_femalePeopleSelector" @bind-SelectedPersonId="@SelectedFemale" Label="Female" />
    <IconButton IconName="uim:process" ButtonText="Calculate" OnClickCallback="OnClickCalculate"></IconButton>
</div>


@code {

    //VARIABLES
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }
    private PeopleSelectorBox _malePeopleSelector;
    private PeopleSelectorBox _femalePeopleSelector;



    //--------------------EVENT HANDLERS


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //show loading box
            //await _jsRuntime.ShowLoading();

            //get male list from api server & save it for later
            //_malePeopleSelector.SetData(await WebsiteTools.GetMalePeopleList(AppData.CurrentUser?.Id));
            //_femalePeopleSelector.SetData(await WebsiteTools.GetFemalePeopleList(AppData.CurrentUser?.Id));

            //hide loading box
            //_jsRuntime.HideAlert();

            ////called last because will loop back
            //this.StateHasChanged();

        }
    }

    private async Task OnClickCalculate()
    {
        await _jsRuntime.ShowLoading();

        //only continue if passed input field validation
        if (!ValidationPassed()) { return; }

        //navigate page to match report
        _navigation.NavigateTo($"{PageRoute.MatchReport}/{SelectedMale}/{SelectedFemale}");
    }

    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private bool ValidationPassed()
    {

        //TEST 1
        //if person not selected, invalid
        if (!_malePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select male person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;

        }

        //TEST 2
        //if person not selected, invalid
        if (!_femalePeopleSelector.IsPersonSelected)
        {
            //mark invalid & alert user
            var msg = $"Select female person name!";
            _jsRuntime.ShowAlert("error", msg, true);
            return false;
        }


        //if control reaches here than, it's valid
        return true;


    }


}
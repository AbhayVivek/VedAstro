@page "/match"
@using Microsoft.AspNetCore.Components


<PageTitle>Find Marriage Match</PageTitle>

<PageTop Title="Match" Description="Check marriage compatibility between horoscopes">
    <ButtonsRow>
        <div class="mt-3 hstack gap-4">
            <button @onclick="OnClickAddPerson" class="btn btn-primary hstack gap-2">
                <span class="iconify" data-icon="ant-design:user-add-outlined" data-width="25"></span> Add Person
            </button>
            <button @onclick="OnClickPersonList" class="btn btn-primary hstack gap-2">
                <span class="iconify" data-icon="fluent:people-list-24-filled" data-width="25"></span> Person List
            </button>
        </div>
    </ButtonsRow>
</PageTop>




<div class="vstack gap-3">
    <PeopleSelectorBox @ref="_malePeopleSelector" @bind-SelectedPersonName="@SelectedMale" Label="Male" />
    <PeopleSelectorBox @ref="_femalePeopleSelector" @bind-SelectedPersonName="@SelectedFemale" Label="Female" />
    <button @onclick="GetMatchReport" class="btn btn-primary hstack gap-2">
        <span class="iconify" data-icon="uim:process" data-width="25"></span> Calculate
    </button>
</div>


@code {

    //VARIABLES
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }
    private PeopleSelectorBox _malePeopleSelector;
    private PeopleSelectorBox _femalePeopleSelector;



    //--------------------EVENT HANDLERS

    public void OnClickAddPerson(MouseEventArgs obj) => _navigation.NavigateTo(PageRoute.PersonEditor);
    public void OnClickPersonList(MouseEventArgs obj) => _navigation.NavigateTo(PageRoute.PersonList);


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //show loading box
            await _globalVariable.LoadingMessage.Show();

            //get male list from api server & save it for later
            _malePeopleSelector.SetData(await WebsiteTools.GetMalePeopleList(await WebsiteTools.GetUserIdAsync(_jsRuntime)));
            _femalePeopleSelector.SetData(await WebsiteTools.GetFemalePeopleList(await WebsiteTools.GetUserIdAsync(_jsRuntime)));

            //hide loading box
            await _globalVariable.LoadingMessage.Hide();

            //called last because will loop back
            this.StateHasChanged();

        }
    }

    private void GetMatchReport() => _navigation.NavigateTo($"matchreport/{SelectedMale}/{SelectedFemale}");
}
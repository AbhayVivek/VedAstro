@page "/match"
@using Microsoft.AspNetCore.Components


<PageTitle>Find Marriage Match</PageTitle>

<PageTop Title="Match" IconName="bi:arrow-through-heart-fill">
    <Description>Check marriage compatibility between horoscopes</Description>
    <ButtonsRow>
        <IconButton IconName="ant-design:user-add-outlined" ButtonText="Add Person" ClickUrl="@PageRoute.PersonEditor"></IconButton>
        <IconButton IconName="fluent:people-list-24-filled" ButtonText="Person List" ClickUrl="@PageRoute.PersonList"></IconButton>
    </ButtonsRow>
</PageTop>




<div class="vstack gap-3">
    <PeopleSelectorBox @ref="_malePeopleSelector" @bind-SelectedPersonName="@SelectedMale" Label="Male" />
    <PeopleSelectorBox @ref="_femalePeopleSelector" @bind-SelectedPersonName="@SelectedFemale" Label="Female" />
    <IconButton IconName="uim:process" ButtonText="Calculate" ClickUrl="@($"{PageRoute.MatchReport}/{SelectedMale}/{SelectedFemale}")"></IconButton>
</div>


@code {

    //VARIABLES
    public string? SelectedMale { get; set; }
    public string? SelectedFemale { get; set; }
    private PeopleSelectorBox _malePeopleSelector;
    private PeopleSelectorBox _femalePeopleSelector;



    //--------------------EVENT HANDLERS


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //show loading box
            await _globalVariable.LoadingMessage.Show();

            //get male list from api server & save it for later
            _malePeopleSelector.SetData(await WebsiteTools.GetMalePeopleList(await WebsiteTools.GetUserIdAsync(_jsRuntime)));
            _femalePeopleSelector.SetData(await WebsiteTools.GetFemalePeopleList(await WebsiteTools.GetUserIdAsync(_jsRuntime)));

            //hide loading box
            await _globalVariable.LoadingMessage.Hide();

            //called last because will loop back
            this.StateHasChanged();

        }
    }

}
@page "/matchreport/{MaleName}/{FemaleName}"
@using Genso.Astrology.Library.Compatibility
@using Genso.Astrology.Library

<PageTitle>Match Report</PageTitle>

@if (_report != null)
{

    <h1>@MaleName + @FemaleName = Score <b style="color:@GetScoreColor(_report.KutaScore);">@_report.KutaScore/100</b></h1>

    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Nature</th>
            <th scope="col">Description</th>
            <th scope="col">Info</th>
            <th scope="col">MaleInfo</th>
            <th scope="col">FemaleInfo</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var prediction in _report.PredictionList)
        {
            //if no prediction then don't print
            @if (prediction.Name == Name.Empty){continue;}

            <tr>
                <td scope="row">@prediction.Name</td>
                <td style="color:@GetNatureColor(prediction.Nature);">@prediction.Nature</td>
                <td>@prediction.Description</td>
                <td>@prediction.Info</td>
                <td>@prediction.MaleInfo</td>
                <td>@prediction.FemaleInfo</td>
            </tr>
        }
        </tbody>
    </table>

}


@code {

    //VARIABLES
    [Parameter]
    public string? MaleName { get; set; } //data from URL not necessary provided
    [Parameter]
    public string? FemaleName { get; set; } //data from URL not necessary provided

    CompatibilityReport? _report = null; //when needs to be show before init

    //generate the report
    protected override async Task OnInitializedAsync() => _report = await ServerManager.GetCompatibilityReport(MaleName ?? "", FemaleName ?? "");

    private static string GetNatureColor(EventNature nature)
    {
        switch (nature)
        {
            case EventNature.Good:
                return "Green";
            case EventNature.Bad:
                return "Red";
            default:
                return "Black";
        }
    }
    private static string GetScoreColor(double score) => score > 50 ? "Green" : "Red";


}

@attribute [Route(PageRoute.Muhurtha)]
@using Genso.Astrology.Library

<PageTitle>Muhurtha</PageTitle>

<PageTop Title="Muhurtha" IconName="ic:twotone-event">
    <Description>
        Muhurtha is sanskrit for "Good Time". Also known as
        electional astrology helps to find a good time for auspicious events.
        Find out the right time for wedding, job interview and etc.
    </Description>
    <ButtonsRow>
        <IconButton IconName="ant-design:user-add-outlined" ButtonText="Add Person" ClickUrl="@PageRoute.AddPerson"></IconButton>
        <IconButton IconName="bx:book-reader" ButtonText="Help" OnClickCallback="@_helpSection.Show"></IconButton>
    </ButtonsRow>
</PageTop>

<div class="vstack gap-3" style="max-width: @AppData.MaxContentWidthPx">
    <PeopleSelectorBox @ref="_peopleSelectorBox" />

    <TimeInput @ref="_startTimeInput" />
    <TimeInput @ref="_endTimeInput" />

    <h6 class="mt-2 mb-0">Select Type</h6>
    <div class="border border-1">
        <div class="d-flex flex-wrap">
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_dasaCheckBox" type="checkbox">
                    <label class="form-check-label">Dasa <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_bhuktiCheckBox" type="checkbox">
                    <label class="form-check-label">Bhukti <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_antaramCheckBox" type="checkbox">
                    <label class="form-check-label">Antaram <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_gocharaCheckBox" type="checkbox">
                    <label class="form-check-label">Gochara <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_personalCheckBox" type="checkbox">
                    <label class="form-check-label">Personal <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_generalCheckBox" type="checkbox">
                    <label class="form-check-label">General <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_agricultureCheckBox" type="checkbox">
                    <label class="form-check-label">Agriculture <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2 bd-highlight">
                <div class="form-check">
                    <input class="form-check-input" @bind="_astronomicalCheckBox" type="checkbox">
                    <label class="form-check-label">Astronomical <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2 bd-highlight">
                <div class="form-check">
                    <input class="form-check-input" @bind="_rulingConstellationCheckBox" type="checkbox">
                    <label class="form-check-label">Ruling Constellation <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_hairNailCuttingCheckBox" type="checkbox">
                    <label class="form-check-label">Cutting Hair/Nails <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_buildingCheckBox" type="checkbox">
                    <label class="form-check-label">House Building <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
            <div class="p-2">
                <div class="form-check">
                    <input class="form-check-input" @bind="_travelCheckBox" type="checkbox">
                    <label class="form-check-label">Travel <HelpBox HelpText="All dasa events are included" SmallIcon="true"></HelpBox></label>
                </div>
            </div>
        </div>
    </div>

    <IconButton IconName="uim:process" ButtonText="Calculate" OnClickCallback="OnClickCalculate"></IconButton>

</div>


@*hide until ready but initialized as well*@
<div style="@(_isResultReady?"":"display:none;")">
    <hr>
    @*DASA VIEW BOX*@
    <div style="margin-bottom: 50px">
        <HelpBox Label="Events" HelpText="@HelpText.MuhurthaChart"></HelpBox>
        <EventReportViewer @ref="_eventReportViewer" />
    </div>

</div>


@*HELP SECTION*@
<PageHelpSection @ref="_helpSection">
    <Content>
        <h4 class="fw-bold">Muhurtha vs. Horoscope</h4>
        <p class="text-justify">
            What is meant by Muhurtha? How far is it superior to horoscopy? These
            are important questions which we shall try to answer here.
            Horoscopy reads what is indicated by the planetary positions at the time
            of birth being the resultant of one's previous karma. In other words, it
            has to do only with what one has brought with him the sum-total of one's
            inheritance - physical, mental and material. Here we do nothing more
            than read simply a technical letter as if it were written in planetary and
            other symbols.
        </p>
        <p class="text-justify">
            Muhurtha, on the other hand, is much more important. It
            gives valuable directions by following which the person will be enabled
            to remove, neutralize, counteract or overcome the evils indicated by the
            horoscopic chart. Horoscopy is diagnostic. It merely points out the ills
            but prescribes no remedies. Muhurtha is prescriptive as well as
            preventive. It tells how by undertaking ventures at auspicious times one
            can ward off the evils and ensure success.
        </p>
        <p class="text-justify">
            Suppose break in education
            is indicated by the position of evil planets in the fourth house from the
            Ascendant and by the affliction of Jupiter, lord of education and
            Mercury, lord of intelligence. These planetary conjunctions indicate want
            of education in a man as a result of his karma in previous states of
            existence. Muhurtha says that the obstructions to educational progress
            by the planetary conjunctions indicated at the time of birth can be
            minimized by fixing an auspicious time* for commencing the education.
            Suppose evil planets in the fifth house indicate loss of children. Then
            Muhurtha comes to his help first by asking him to marry at a certain
            auspicious time when ethereal currents released from the planets will be
            so powerful as to minimize or modify the afflictions to the extent that the
            birth and survival of at least some children may be ensured.
        </p>
        <p class="text-justify">
            Thus Muhurtha helps one to minimize or modify the evils of our past Karma to
            a considerable extent. I must warn my readers not to imagine that
            Muhurtha is the masterkey to all wealth and happiness. Muhurtha tells
            us when to do a certain thing if failure is to be avoided.
        </p>

        @AppData.MuhurthaCredit

    </Content>
</PageHelpSection>


@code {
    private bool _isResultReady = false; //marks if the page ready to loaded

    private PageHelpSection _helpSection;

    private bool _dasaCheckBox, _bhuktiCheckBox, _antaramCheckBox, _gocharaCheckBox, _personalCheckBox, _travelCheckBox;
    private bool _generalCheckBox, _buildingCheckBox, _agricultureCheckBox, _astronomicalCheckBox, _rulingConstellationCheckBox;
    private bool _hairNailCuttingCheckBox;

    private TimeInput _startTimeInput;
    private TimeInput _endTimeInput;

    private PeopleSelectorBox? _peopleSelectorBox;
    private EventReportViewer? _eventReportViewer;


    //█░░ █ █▀▀ █▀▀ █▀▀ █▄█ █▀▀ █░░ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▄▄ █ █▀░ ██▄ █▄▄ ░█░ █▄▄ █▄▄ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█
    //METHODS THAT CAN IMPLEMENT ASYNC ERROR HANDLER


    private async Task OnClickCalculate() => await InvokeAsync(async () => await _OnClickCalculate()).Try(_jsRuntime);




    //█▀█ █▀█ █ █░█ ▄▀█ ▀█▀ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▀▀ █▀▄ █ ▀▄▀ █▀█ ░█░ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█



    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {   //default set time to end of day
            _endTimeInput.HourMin = "23:59";
        }
    }

    private async Task _OnClickCalculate()
    {

        //only continue if passed input field validation
        if (!ValidationPassed()) { return; }

        _jsRuntime.ShowLoading();

        //mark page as NOT ready (when button clicked 2nd time)
        _isResultReady = false;

        //get needed input data
        var selectedPerson = _peopleSelectorBox.GetSelectedPerson();
        var startTime = _startTimeInput.GetTime(selectedPerson.GetBirthLocation());
        var endTime = _endTimeInput.GetTime(selectedPerson.GetBirthLocation());
        var getSelectedEventTypes = GetSelectedEventTypes();

        //inputedEventTags = new List<EventTag> { EventTag.Dasa, EventTag.Bhukti, EventTag.Antaram, EventTag.Gochara, EventTag.Personal, EventTag.General };
        await _eventReportViewer.SetData(selectedPerson, startTime, endTime, getSelectedEventTypes);

        //mark page as ready to show results
        _isResultReady = true;

        _jsRuntime.HideAlert();
    }

    /// <summary>
    /// Checks if validation of all input fields
    /// </summary>
    private bool ValidationPassed()
    {

        //TEST 1
        //if person not selected, invalid
        if (!_peopleSelectorBox.IsPersonSelected)
        {
            //mark invalid & alert user
            _jsRuntime.ShowAlert("error", AlertText.NoName, true);
            return false;
        }

        //TEST 2
        //check if at-least 1 event is selected
        if (!GetSelectedEventTypes().Any())
        {
            //mark invalid & alert user
            _jsRuntime.ShowAlert("error", AlertText.SelectEventType, true);
            return false;
        }

        //if control reaches here than validation passed
        return true;
    }


    private List<EventTag> GetSelectedEventTypes()
    {
        var returnList = new List<EventTag>();


        if (_dasaCheckBox) { returnList.Add(EventTag.Dasa); }
        if (_bhuktiCheckBox) { returnList.Add(EventTag.Bhukti); }
        if (_antaramCheckBox) { returnList.Add(EventTag.Antaram); }
        if (_gocharaCheckBox) { returnList.Add(EventTag.Gochara); }
        if (_rulingConstellationCheckBox) { returnList.Add(EventTag.RulingConstellation); }
        if (_personalCheckBox) { returnList.Add(EventTag.Personal); }
        if (_generalCheckBox) { returnList.Add(EventTag.General); }
        if (_agricultureCheckBox) { returnList.Add(EventTag.Agriculture); }
        if (_astronomicalCheckBox) { returnList.Add(EventTag.Astronomical); }
        if (_buildingCheckBox) { returnList.Add(EventTag.Building); }
        if (_hairNailCuttingCheckBox) { returnList.Add(EventTag.HairNailCutting); }
        if (_travelCheckBox) { returnList.Add(EventTag.Travel); }

        return returnList;
    }

}

@page "/muhurtha"
@using Genso.Astrology.Library
@using Tools = Genso.Astrology.Library.Tools
@inject GlobalVariableManager _globalVariable

<PageTitle>Muhurtha</PageTitle>

@if (_isPageReady)
{

    <div>
        <label>Person</label>
        <select @bind="SelectedPersonName" class="form-control">
            <option value="">Select Name</option>
            @foreach (var person in PersonList)
            {
                <option value="@person.GetName()">@person.GetName() - @person.GetBirthDateTime().GetStdDateTimeOffset().Year</option>
            }
        </select>
    </div>
    <div style="margin-top: 50px" class="row">
        <button type="submit" @onclick="OnClickCalculate" class="btn btn-primary">Calculate</button>
    </div>
}
else
{
    <LoadingMessage Show="true" />
}
@if (_isResultReady)
{
    <DasaViewBox Person="@SelectedPerson" Location="@SelectedLocation" />
}



@code {

    public List<Person> PersonList { get; set; } //data from URL not necessary provided
    public string? SelectedPersonName { get; set; }
    public Person SelectedPerson { get; set; }
    public GeoLocation SelectedLocation { get; set; }
    List<Event> _dasaEvents;
    private bool _isPageReady = false; //marks if the page ready to loaded
    private bool _isResultReady = false; //marks if the page ready to loaded


    protected override async Task OnInitializedAsync()
    {
        //get person list from api server & save it for later
        var personListRootXml = await ServerManager.ReadFromServer(ServerManager.GetPersonListAPI);
        PersonList = personListRootXml.Elements().Select(maleXml => Person.FromXml(maleXml)).ToList();

        _isPageReady = true;

    }

    private void OnClickCalculate()
    {

        //get data from inputs and save it for use by other components
        SelectedPerson = PersonList.Find(p => p.GetName() == SelectedPersonName); //TODO: find person by hash not name only
        SelectedLocation = new GeoLocation("Ipoh", 101, 4.59);//todo get real location

        //mark page as ready to show results
        _isResultReady = true;
    }


}
@using Genso.Astrology.Library


<ul style="font-size: small;" class="list-group me-2 my-2">
    <li class="list-group-item active" aria-current="true">@PlanetName.ToString()</li>
    <li class="list-group-item">Shadbala Pinda : @_shadbalaPinda Shashtiamsas</li>
    <li class="list-group-item">Aspect Strength : @_planetAspectStrength</li>
    <li class="list-group-item">House : @_planetCurrentHouse</li>
    <li class="list-group-item">Sign : @_planetCurrentSign</li>
    <li class="list-group-item">Navamsa Sign : @_planetCurrentNavamsaSign</li>
    <li class="list-group-item">Constellation : @_planetCurrentConstellation</li>
    <li class="list-group-item">Relation to House: @_currentHouseRelation</li>
    <li class="list-group-item">Malefic Aspect: @(_isPlanetAspectedByMaleficPlanets?"Yes":"No")</li>
    <li class="list-group-item">Malefic Conjunct: @(_isPlanetConjunctWithMaleficPlanets?"Yes":"No")</li>
    <li class="list-group-item">Conjunct: @_conjunctPlanets</li>
    <li class="list-group-item">Aspecting: @_aspectingPlanets</li>
</ul>


@code {
    [Parameter]
    public Time Time
    {
        get => _time;
        set
        {
            _time = value;
            //needed for updates to be shown on 2nd click
            _isDirty = true;
        }
    }

    private Time _time;
    bool _isDirty = false;

    [Parameter]
    public PlanetName PlanetName { get; set; }
    private bool _isPageReady = false; //marks if the page ready to loaded

    private double _shadbalaPinda;
    private double _planetAspectStrength;
    private int _planetCurrentHouse;
    private string _planetCurrentSign, _aspectingPlanets, _conjunctPlanets;
    private string _planetCurrentConstellation;
    private string _planetCurrentNavamsaSign;
    private PlanetToSignRelationship _currentHouseRelation;
    private bool _isPlanetAspectedByMaleficPlanets;
    private bool _isPlanetConjunctWithMaleficPlanets;


    protected override void OnInitialized() => CalculateUpdateData();

    protected override void OnAfterRender(bool firstRender)
    {
        //only update if Time value has been updated (to stop loop)
        if (_isDirty)
        {
            _isDirty = false; //reset
            CalculateUpdateData();
        }
    }



    public void CalculateUpdateData()
    {
        //get planet details and save it for view
        _shadbalaPinda = AstronomicalCalculator.GetPlanetShadbalaPinda(PlanetName, Time).ToDouble();

        _planetAspectStrength = AstronomicalCalculator.GetPlanetDrikBala(PlanetName, Time).ToDouble();

        _planetCurrentHouse = AstronomicalCalculator.GetHousePlanetIsIn(Time, PlanetName);

        _planetCurrentSign = AstronomicalCalculator.GetPlanetRasiSign(PlanetName, Time).ToString();

        _planetCurrentNavamsaSign = AstronomicalCalculator.GetPlanetNavamsaSign(PlanetName, Time).ToString();

        _planetCurrentConstellation = AstronomicalCalculator.GetPlanetConstellation(Time, PlanetName).ToString();

        _currentHouseRelation = AstronomicalCalculator.GetPlanetRelationshipWithHouse((HouseName)_planetCurrentHouse, PlanetName, Time);

        _isPlanetAspectedByMaleficPlanets = AstronomicalCalculator.IsPlanetAspectedByMaleficPlanets(PlanetName, Time);

        _isPlanetConjunctWithMaleficPlanets = AstronomicalCalculator.IsPlanetConjunctWithMaleficPlanets(PlanetName, Time);

        _conjunctPlanets = Tools.ListToString<PlanetName>(AstronomicalCalculator.GetPlanetsInConjuction(Time, PlanetName));

        _aspectingPlanets = Tools.ListToString<PlanetName>(AstronomicalCalculator.GetPlanetsAspectingPlanet(Time, PlanetName));

        //needed to update values
        StateHasChanged();
    }


}

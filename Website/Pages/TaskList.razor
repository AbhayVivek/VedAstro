@using Genso.Astrology.Library
@attribute [Route(PageRoute.TaskList)]

<PageTitle>Features & Bug Fixes</PageTitle>

<PageTop Title="Task List">
    <Description>This is a list of features, bug fixes & general things<br/>to be done for the VedAstro Project</Description>
</PageTop>

<div class="hstack gap-4">
    <button @onclick="OnClickAddTask" class="btn btn-primary">Add Task</button>
</div>



<div class="container">
    <div id="@TableId"></div>
</div>



@code {

    //FIELDS
    const string TableId = "TaskListTable";


    //code executed after page has been rendered
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //generate table
        if (firstRender) { await GenerateTable(); }
    }


    private async Task GenerateTable()
    {
        await _globalVariable.LoadingMessage.Show();

        //get all task from API server
        var tasksListXml = await ServerManager.ReadFromServerXmlReply(ServerManager.GetTaskListApi);

        //convert xml to objects
        var taskList = new List<WebsiteTask>();
        foreach (var taskXml in tasksListXml.Elements()) { taskList.Add(WebsiteTask.FromXml(taskXml)); }

        //convert objects to json (for js generator library)
        //and calls js code change table directly
        await _jsRuntime.InvokeVoidAsync("generateWebsiteTaskListTable", TableId, taskList.ToArray());

        await _globalVariable.LoadingMessage.Hide();

    }


    //--------------------EVENT HANDLERS

    public void OnClickAddTask(MouseEventArgs obj) => _navigation.NavigateTo(PageRoute.TaskEditor);

}

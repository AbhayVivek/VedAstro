@using System.Text.Json
@using System.Text.Json.Nodes
@using System.Xml
@using System.Xml.Linq
@using Genso.Astrology.Library
@using Newtonsoft.Json
@inherits LayoutComponentBase

@*
    NOTE : Components here are loaded same time as page,
    so component might not exist when page needs it.
    Thus page must check & wait during init.
*@

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>
    @* this is where global loading message gets created*@
    <Website.Pages.LoadingMessage @ref="_globalVariable.LoadingMessage" />

    <main>
        @*        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            </div>
        *@

        <article class="content px-4 mb-5">
            @* this is where global variable alert message gets created*@
            <AlertMessage @ref="_globalVariable.Alert" />

            @Body
        </article>

    </main>
</div>


@code
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        //run once after first render,
        //Note: until site reloaded this only run once
        if (firstRender)
        {
            //get visitor data & format it nicely for storage
            var dataJson = await _jsRuntime.InvokeAsync<JsonNode>("getVisitorData");
            var rawXml = JsonConvert.DeserializeXmlNode(dataJson.ToString(), "Visitor");
            var visitorElement = XElement.Parse(rawXml.InnerXml);
            var timeStampXml = new XElement("TimeStamp", Tools.GetNowSystemTimeText());
            var locationXml = await ServerManager.ReadFromServer(ServerManager.GetGeoLocation, "Location");
            visitorElement.Add(timeStampXml, locationXml);

            //send to API for save keeping
            var result = await ServerManager.WriteToServer(ServerManager.AddVisitorAPI, visitorElement);

            //todo do something with result
            Console.WriteLine(result);
        }
    }

}
